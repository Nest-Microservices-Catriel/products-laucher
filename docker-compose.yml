version: '3.9'

services:
  nats-server:
    image: nats:latest
    ports:
      - '8222:8222'

  client-gateway:
    build: ./client-gateway
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - NATS_SERVERS=nats://nats-server:4222

  products-ms:
    build: ./products-ms
    volumes:
      - ./products-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3001
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=file:./dev.db

  orders-ms:
    depends_on:
      - orders-db
    build: ./orders-ms
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3002
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=asda1234
      - POSTGRES_DB=ordersdb
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=orders-db
      - NATS_SERVERS=nats://nats-server:4222

  orders-db:
    container_name: orders_database
    image: postgres:16.2
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=asda1234
      - POSTGRES_DB=ordersdb
  # ===================
  # Payments microservice
  # ===================

  payments-ms:
    build: ./payments-ms
    volumes:
      - ./payments-ms/src:/usr/src/app/src
    ports:
      - '3004:3004'
    command: npm run start:dev
    environment:
      - PORT=3004
      - STRIPE_SECRET=${STRIPE_SECRET}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - STRIPE_ENDPOINT_SECRET=${STRIPE_ENDPOINT_SECRET}
      - NATS_SERVERS=${NATS_SERVERS}

volumes:
  postgres_data:
